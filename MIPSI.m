function [t,VAR,Output] = MIPSI
%===========================================================================
% File: MIPSI.m created Dec 01 2021 by MotionGenesis 5.9.
% Portions copyright (c) 2009-2020 Motion Genesis LLC.  Rights reserved.
% MotionGenesis Basic Research/Vanilla Licensee: Daniel Jacobs. (until June 2024).
% Paid-up MotionGenesis Basic Research/Vanilla licensees are granted the right
% to distribute this code for legal academic (non-professional) purposes only,
% provided this copyright notice appears in all copies and distributions.
%===========================================================================
% The software is provided "as is", without warranty of any kind, express or    
% implied, including but not limited to the warranties of merchantability or    
% fitness for a particular purpose. In no event shall the authors, contributors,
% or copyright holders be liable for any claim, damages or other liability,     
% whether in an action of contract, tort, or otherwise, arising from, out of, or
% in connection with the software or the use or other dealings in the software. 
%===========================================================================
eventDetectedByIntegratorTerminate1OrContinue0 = [];
IxxA=0; IyyE=0; IzzB=0; IzzC=0; IzzD=0; px=0; py=0; pz=0; qa=0; qb=0; qc=0; qd=0; qe=0; qf=0; TA=0; TB=0; TC=0; TD=0; TE=0; TF=0;
dumbDt=0; qaDt=0; qbDt=0; qcDt=0; qdDt=0; qeDt=0; qfDt=0; qaDDt=0; qbDDt=0; qcDDt=0; qdDDt=0; qeDDt=0; qfDDt=0; CbX=0; CbY=0; CbZ=0;
DcX=0; DcY=0; DcZ=0; EdX=0; EdY=0; EdZ=0; FeX=0; FeY=0; FeZ=0; IxxB=0; IxxC=0; IxxD=0; IxxE=0; IxxF=0; IyyB=0; IyyC=0; IyyD=0; IyyF=0;
IzzE=0; IzzF=0; QX=0; QY=0; QZ=0;
z = zeros( 1, 347 );

%-------------------------------+--------------------------+-------------------+-----------------
% Quantity                      | Value                    | Units             | Description
%-------------------------------|--------------------------|-------------------|-----------------
FN                              =  120;                    % lbf                 Constant
g                               =  3.721;                  % m/s^2               Constant
hA                              =  3;                      % ft                  Constant
LA                              =  0.5;                    % ft                  Constant
LB                              =  2;                      % ft                  Constant
LC                              =  2;                      % ft                  Constant
LD                              =  1;                      % ft                  Constant
LE                              =  0.5;                    % ft                  Constant
LF                              =  1;                      % ft                  Constant
mA                              =  25;                     % kg                  Constant
mB                              =  25;                     % kg                  Constant
mC                              =  10;                     % kg                  Constant
mD                              =  5;                      % kg                  Constant
mE                              =  5;                      % kg                  Constant
mF                              =  5;                      % kg                  Constant
qr                              =  45;                     % deg                 Constant
r                               =  .05;                    % m                   Constant

dumb                            =  0;                      % UNITS               Initial Value

tInitial                        =  0;                      % s                   Initial Time
tFinal                          =  15;                     % s                   Final Time
tStep                           =  .02;                    % s                   Integration Step
printIntScreen                  =  1;                      % 0 or +integer       0 is NO screen output
printIntFile                    =  1;                      % 0 or +integer       0 is NO file   output
absError                        =  1.0E-05;                %                     Absolute Error
relError                        =  1.0E-08;                %                     Relative Error
%-------------------------------+--------------------------+-------------------+-----------------

% Unit conversions.  UnitSystem: kg, meter, second.
DEGtoRAD = pi / 180.0;
RADtoDEG = 180.0 / pi;
FN = FN * 4.448221615260499;                               %  Converted from lbf 
hA = hA * 0.3048;                                          %  Converted from ft 
LA = LA * 0.3048;                                          %  Converted from ft 
LB = LB * 0.3048;                                          %  Converted from ft 
LC = LC * 0.3048;                                          %  Converted from ft 
LD = LD * 0.3048;                                          %  Converted from ft 
LE = LE * 0.3048;                                          %  Converted from ft 
LF = LF * 0.3048;                                          %  Converted from ft 
qr = qr * DEGtoRAD;                                        %  Converted from deg 

% Evaluate constants
IxxA = 0.5*mA*r^2;
IzzB = 0.08333333333333333*mB*(LB^2+3*r^2);
IzzC = 0.08333333333333333*mC*(LC^2+3*r^2);
IzzD = 0.08333333333333333*mD*(LD^2+3*r^2);
IyyE = 0.5*mE*r^2;
px = 1.891926146905659;
py = 0.5957666100631733;
pz = -0.1839630734528298;
z(291) = mC*g;
z(290) = mB*g;
z(321) = LB*z(290);
z(323) = LC*z(291);
z(292) = mD*g;
z(325) = LD*z(292);
z(328) = FN*LF;
IxxB = 0.5*mB*r^2;
IyyB = 0.08333333333333333*mB*(LB^2+3*r^2);
IxxC = 0.5*mC*r^2;
IyyC = 0.08333333333333333*mC*(LC^2+3*r^2);
IxxD = 0.5*mD*r^2;
IyyD = 0.08333333333333333*mD*(LD^2+3*r^2);
IxxE = 0.08333333333333333*mE*(LE^2+3*r^2);
IzzE = 0.08333333333333333*mE*(LE^2+3*r^2);
IxxF = 0.5*mF*r^2;
IyyF = 0.08333333333333333*mF*(LF^2+3*r^2);
IzzF = 0.08333333333333333*mF*(LF^2+3*r^2);
z(232) = mD*LD;
z(237) = mF*LF;
z(240) = IzzB + IzzC + 0.25*mB*LB^2;
z(241) = LC^2 + 4*LB^2;
z(242) = LB*LC;
z(243) = 4*LB^2 + 4*LC^2 + 4*LD^2;
z(244) = LC*LD;
z(245) = LB*LD;
z(246) = LB^2;
z(247) = LC^2;
z(248) = LD^2;
z(250) = mC*LC;
z(251) = 4*LC^2 + 4*LD^2;
z(253) = LB*LE;
z(254) = LC*LE;
z(259) = mB*LB;
z(261) = IzzC + 0.25*mC*LC^2;
z(262) = LD^2 + 4*LC^2;
z(269) = IzzD + 0.25*mD*LD^2 + 0.25*mE*(LE^2+4*LD^2);
z(270) = 4*LD^2 + 4*LE^2;
z(284) = 0.25*mF*LF^2 + IzzF;
z(293) = mE*g;
z(294) = mF*g;
z(296) = sin(qr);
z(297) = cos(qr);
z(329) = LF*z(294);
dumbDt = 0.1234;


VAR = SetMatrixFromNamedQuantities;
[t,VAR,Output] = IntegrateForwardOrBackward( tInitial, tFinal, tStep, absError, relError, VAR, printIntScreen, printIntFile );
OutputToScreenOrFile( [], 0, 0 );   % Close output files.
if( printIntFile ~= 0 ),  PlotOutputFiles;  end


%===========================================================================
function sys = mdlDerivatives( t, VAR, uSimulink )
%===========================================================================
SetNamedQuantitiesFromMatrix( VAR );
sys = transpose( SetMatrixOfDerivativesPriorToIntegrationStep );
end



%===========================================================================
function VAR = SetMatrixFromNamedQuantities
%===========================================================================
VAR = zeros( 1, 1 );
VAR(1) = dumb;
end


%===========================================================================
function SetNamedQuantitiesFromMatrix( VAR )
%===========================================================================
dumb = VAR(1);
end


%===========================================================================
function VARp = SetMatrixOfDerivativesPriorToIntegrationStep
%===========================================================================
VARp = zeros( 1, 1 );
VARp(1) = dumbDt;
end



%===========================================================================
function Output = mdlOutputs( t, VAR, uSimulink )
%===========================================================================
z(41) = sin(0.4188790204786391*t);
z(42) = 0.03490658503988658*t - 0.08333333333333333*z(41);
qa = z(42);
qaDt = 0.03490658503988658 - 0.03490658503988658*cos(0.4188790204786391*t);
qaDDt = 0.01462163614976201*sin(0.4188790204786391*t);
z(43) = 1.74532925199433 + 0.0930842267730309*t - 0.2222222222222222*z(41);
qb = z(43);
qbDt = 0.0930842267730309 - 0.09308422677303088*cos(0.4188790204786391*t);
qbDDt = 0.03899102973269868*sin(0.4188790204786391*t);
z(44) = 0.3490658503988659 + 0.1861684535460618*t - 0.4444444444444444*z(41);
qc = z(44);
qcDt = 0.1861684535460618 - 0.1861684535460618*cos(0.4188790204786391*t);
qcDDt = 0.07798205946539738*sin(0.4188790204786391*t);
z(45) = 2.705260340591211 + 0.4305555555555556*z(41) - 0.1803506893727474*t;
qd = z(45);
qdDt = -0.1803506893727474 + 0.1803506893727474*cos(0.4188790204786391*t);
qdDDt = -0.07554512010710374*sin(0.4188790204786391*t);
z(46) = 0.4363323129985824 + 0.06944444444444446*z(41) - 0.02908882086657216*t;
qe = z(46);
qeDt = -0.02908882086657216 + 0.02908882086657216*cos(0.4188790204786391*t);
qeDDt = -0.01218469679146834*sin(0.4188790204786391*t);
z(47) = 2.356194490192345 + 0.5*z(41) - 0.2094395102393195*t;
qf = z(47);
qfDt = -0.2094395102393195 + 0.2094395102393195*cos(0.4188790204786391*t);
qfDDt = -0.08772981689857207*sin(0.4188790204786391*t);
z(5) = sin(qa);
z(2) = sin(qb);
z(86) = sin(qb-qc);
z(87) = LB*z(2) - 0.5*LC*z(86);
z(62) = LB*z(2);
z(119) = sin(qc-qb-qd);
z(120) = LD*z(119);
z(124) = cos(qc-qb-qd);
z(157) = LB*z(2) - LC*z(86) - 0.5*LE*z(124);
z(118) = LB*z(2) - LC*z(86);
z(210) = LB*z(2) - LC*z(86) - LE*z(124);
z(1) = cos(qb);
z(3) = cos(qa);
z(7) = z(1)*z(3);
z(9) = sin(qc);
z(4) = z(2)*z(3);
z(10) = cos(qc);
z(12) = z(7)*z(9) - z(4)*z(10);
z(17) = cos(qd);
z(15) = z(4)*z(9) + z(7)*z(10);
z(18) = sin(qd);
z(20) = z(12)*z(17) - z(15)*z(18);
z(27) = sin(qe);
z(25) = cos(qe);
z(31) = z(20)*z(27) - z(5)*z(25);
z(34) = cos(qf);
z(33) = sin(qf);
z(211) = LF*(z(34)*z(119)+z(25)*z(33)*z(124));
z(23) = z(12)*z(18) + z(15)*z(17);
z(28) = z(5)*z(27) + z(20)*z(25);
z(39) = z(23)*z(34) - z(28)*z(33);
z(212) = LF*z(27)*z(124);
z(302) = z(296)*z(5);
z(11) = z(1)*z(10) + z(2)*z(9);
z(14) = z(2)*z(10) - z(1)*z(9);
z(19) = z(11)*z(17) - z(14)*z(18);
z(304) = z(297)*z(19) - z(296)*z(20);
z(310) = z(25)*z(302) + z(27)*z(304);
z(22) = z(11)*z(18) + z(14)*z(17);
z(306) = z(297)*z(22) - z(296)*z(23);
z(308) = z(25)*z(304) - z(27)*z(302);
z(314) = z(34)*z(306) - z(33)*z(308);
z(51) = z(2)*qaDt;
z(53) = IyyB*z(51);
z(54) = IzzB*qbDt;
z(61) = qbDt*z(53) - z(51)*z(54);
z(49) = z(1)*qaDt*qbDt;
z(58) = IyyB*z(49);
z(50) = z(1)*qaDt;
z(52) = IxxB*z(50);
z(60) = z(50)*z(54) - qbDt*z(52);
z(8) = z(1)*z(5);
z(6) = z(2)*z(5);
z(13) = z(8)*z(9) - z(6)*z(10);
z(66) = z(3)*z(12) + z(5)*z(13);
z(71) = z(66)*qaDt*(qbDt-qcDt);
z(80) = IxxC*z(71);
z(74) = z(14)*qaDt;
z(75) = qcDt - qbDt;
z(78) = IzzC*z(75);
z(77) = IyyC*z(74);
z(85) = z(74)*z(78) - z(75)*z(77);
z(16) = z(6)*z(9) + z(8)*z(10);
z(67) = z(3)*z(15) + z(5)*z(16);
z(72) = z(67)*qaDt*(qbDt-qcDt);
z(82) = IyyC*z(72);
z(73) = z(11)*qaDt;
z(76) = IxxC*z(73);
z(84) = z(75)*z(76) - z(73)*z(78);
z(24) = z(13)*z(18) + z(16)*z(17);
z(95) = z(3)*z(24) - z(5)*z(23);
z(103) = z(22)*qaDt + z(95)*qcDt - z(95)*qbDt;
z(70) = z(3)^2 + z(5)^2;
z(104) = z(70)*qcDt - qdDt - z(70)*qbDt;
z(107) = IzzD*z(104);
z(106) = IyyD*z(103);
z(117) = z(103)*z(107) - z(104)*z(106);
z(21) = z(13)*z(17) - z(16)*z(18);
z(94) = z(3)*z(21) - z(5)*z(20);
z(102) = z(19)*qaDt + z(94)*qcDt - z(94)*qbDt;
z(105) = IxxD*z(102);
z(116) = z(104)*z(105) - z(102)*z(107);
z(93) = z(3)*z(23) + z(5)*z(24);
z(135) = qaDt*(z(95)*z(124)*qeDt-z(93)*(qcDt-qbDt-qdDt));
z(149) = IyyE*z(135);
z(30) = z(19)*z(27);
z(32) = z(3)*z(25) + z(21)*z(27);
z(129) = z(3)*z(32) - z(5)*z(31);
z(139) = z(30)*qaDt + z(129)*qcDt - z(25)*qdDt - z(129)*qbDt;
z(26) = z(19)*z(25);
z(29) = z(21)*z(25) - z(3)*z(27);
z(128) = z(3)*z(29) - z(5)*z(28);
z(137) = z(26)*qaDt + z(27)*qdDt + z(128)*qcDt - z(128)*qbDt;
z(140) = IxxE*z(137);
z(142) = IzzE*z(139);
z(155) = z(139)*z(140) - z(137)*z(142);
z(126) = z(3)*z(28) + z(5)*z(29);
z(134) = z(25)*qdDt*qeDt + z(124)*z(128)*qaDt*qeDt + z(25)*qeDt*(qbDt-qcDt) - z(126)*qaDt*(qcDt-qbDt-qdDt);
z(146) = IxxE*z(134);
z(138) = qeDt + z(22)*qaDt + z(95)*qcDt - z(95)*qbDt;
z(141) = IyyE*z(138);
z(156) = z(138)*z(142) - z(139)*z(141);
z(127) = z(3)*z(31) + z(5)*z(32);
z(136) = z(27)*qdDt*qeDt + z(124)*z(129)*qaDt*qeDt + z(27)*qeDt*(qbDt-qcDt) - z(127)*qaDt*(qcDt-qbDt-qdDt);
z(153) = IzzE*z(136);
z(154) = z(137)*z(141) - z(138)*z(140);
z(206) = IzzF*z(136);
z(35) = z(22)*z(33) + z(26)*z(34);
z(37) = z(24)*z(33) + z(29)*z(34);
z(36) = z(23)*z(33) + z(28)*z(34);
z(175) = z(3)*z(37) - z(5)*z(36);
z(183) = z(27)*z(34);
z(187) = z(33)*qeDt + z(35)*qaDt + z(175)*qcDt + z(183)*qdDt - z(175)*qbDt;
z(38) = z(22)*z(34) - z(26)*z(33);
z(40) = z(24)*z(34) - z(29)*z(33);
z(176) = z(3)*z(40) - z(5)*z(39);
z(184) = z(27)*z(33);
z(188) = z(34)*qeDt + z(38)*qaDt + z(176)*qcDt - z(176)*qbDt - z(184)*qdDt;
z(191) = IyyF*z(188);
z(190) = IxxF*z(187);
z(207) = z(187)*z(191) - z(188)*z(190);
z(181) = z(25)*z(34);
z(173) = z(3)*z(36) + z(5)*z(37);
z(185) = z(181)*qdDt*qeDt + z(124)*z(175)*qaDt*qeDt + z(34)*qeDt*(qfDt+z(25)*(qbDt-qcDt)) - z(27)*z(33)*qdDt*qfDt - z(173)*qaDt*(  ...
qcDt-qbDt-qdDt) - qfDt*(z(27)*z(33)*(qbDt-qcDt)+(z(34)*z(119)+z(25)*z(33)*z(124))*qaDt);
z(197) = IxxF*z(185);
z(189) = qfDt + z(30)*qaDt + z(129)*qcDt - z(25)*qdDt - z(129)*qbDt;
z(192) = IzzF*z(189);
z(209) = z(188)*z(192) - z(189)*z(191);
z(182) = z(25)*z(33);
z(174) = z(3)*z(39) + z(5)*z(40);
z(186) = z(124)*z(176)*qaDt*qeDt - z(182)*qdDt*qeDt - z(27)*z(34)*qdDt*qfDt - z(174)*qaDt*(qcDt-qbDt-qdDt) - z(33)*qeDt*(qfDt+  ...
z(25)*(qbDt-qcDt)) - qfDt*(z(27)*z(34)*(qbDt-qcDt)-(z(33)*z(119)-z(25)*z(34)*z(124))*qaDt);
z(202) = IyyF*z(186);
z(208) = z(189)*z(190) - z(187)*z(192);
z(89) = cos(qb-qc);
z(90) = qaDt*(2*LB*z(1)*qbDt-LC*z(89)*(qbDt-qcDt));
z(65) = LB*z(1)*qaDt*qbDt;
z(125) = LD*z(124)*qaDt*(qcDt-qbDt-qdDt);
z(122) = qaDt*(LB*z(1)*qbDt-LC*z(89)*(qbDt-qcDt));
z(123) = LD*(qcDt-qbDt-qdDt)^2;
z(222) = 0.5*LE*qaDt*(z(27)*z(124)*qeDt-2*z(25)*z(119)*(qbDt-qcDt)) - 0.5*LF*(z(27)*z(33)*z(124)*qaDt*qeDt-z(25)*z(33)*qdDt*qeDt-  ...
z(27)*z(34)*qdDt*qfDt-z(33)*qeDt*(qfDt+z(25)*(qbDt-qcDt))-(z(34)*z(124)-z(25)*z(33)*z(119))*qaDt*(qcDt-qbDt-qdDt)-qfDt*(z(27)*  ...
z(34)*(qbDt-qcDt)-(z(33)*z(119)-z(25)*z(34)*z(124))*qaDt)-(qfDt+z(27)*z(124)*qaDt-z(25)*qdDt-z(25)*(qbDt-qcDt))*(z(33)*qeDt+  ...
z(27)*z(34)*qdDt+z(27)*z(34)*(qbDt-qcDt)-(z(33)*z(119)-z(25)*z(34)*z(124))*qaDt));
z(219) = 0.5*LE*(qcDt-qbDt-qdDt)^2 + 0.5*LE*(qdDt^2+(qbDt-qcDt)^2+2*qdDt*(qbDt-qcDt)) + 0.5*LF*z(27)*qdDt*(z(34)*qeDt-z(27)*  ...
z(33)*qdDt-z(27)*z(33)*(qbDt-qcDt)-(z(34)*z(119)+z(25)*z(33)*z(124))*qaDt);
z(223) = LF*(z(27)*z(124)*qaDt*(z(27)*z(124)*qaDt-2*z(25)*qdDt-2*z(25)*(qbDt-qcDt))-z(25)^2*qdDt*(qcDt-qbDt-qdDt)-qfDt*(2*z(25)*qdDt-  ...
qfDt-2*z(27)*z(124)*qaDt)-z(25)*(qbDt-qcDt)*(2*qfDt-z(25)*qdDt-z(25)*(qbDt-qcDt))-(z(34)*z(119)+z(25)*z(33)*z(124))*qaDt*(z(34)*qeDt-  ...
z(27)*z(33)*qdDt-(z(34)*z(119)+z(25)*z(33)*z(124))*qaDt)-z(27)*z(33)*(qbDt-qcDt)*(z(34)*qeDt-z(27)*z(33)*qdDt-z(27)*z(33)*(qbDt-qcDt)-  ...
2*(z(34)*z(119)+z(25)*z(33)*z(124))*qaDt));
z(131) = z(1)*z(30) - z(2)*z(127);
z(64) = LB*qbDt^2;
z(178) = z(1)*z(38) - z(2)*z(174);
z(221) = 0.5*LE*qaDt*(z(25)*z(124)*qeDt+2*z(27)*z(119)*(qbDt-qcDt)) - 0.5*LF*qeDt*(z(34)*qeDt-z(27)*z(33)*qdDt-z(27)*z(33)*(qbDt-  ...
qcDt)-(z(34)*z(119)+z(25)*z(33)*z(124))*qaDt);
z(220) = qaDt*(LE*z(119)*qdDt-2*LD*z(124)*(qcDt-qbDt-qdDt));
z(218) = qaDt*(2*LC*z(89)*(qbDt-qcDt)-2*LB*z(1)*qbDt-LE*z(119)*(qcDt-qbDt-qdDt));
z(224) = LF*(z(27)*z(119)*qaDt*(qcDt-qbDt-qdDt)-z(27)*qdDt*qeDt-z(25)*z(124)*qaDt*qeDt-z(27)*qeDt*(qbDt-qcDt)-(z(27)*z(34)*(qbDt-  ...
qcDt)-(z(33)*z(119)-z(25)*z(34)*z(124))*qaDt)*(z(34)*qeDt-z(27)*z(33)*qdDt-z(27)*z(33)*(qbDt-qcDt)-(z(34)*z(119)+z(25)*z(33)*  ...
z(124))*qaDt));
z(133) = z(1)*z(127) + z(2)*z(30);
z(169) = z(9)*z(133) + z(10)*z(131);
z(91) = LC*(qbDt-qcDt)^2;
z(99) = z(1)*z(93) + z(2)*z(22);
z(97) = z(1)*z(22) - z(2)*z(93);
z(168) = z(9)*z(99) + z(10)*z(97);
z(132) = z(1)*z(126) + z(2)*z(26);
z(130) = z(1)*z(26) - z(2)*z(126);
z(167) = z(9)*z(132) + z(10)*z(130);
z(228) = z(34)*z(168) - z(33)*z(167);
z(160) = LE*z(124)^2*qaDt*qeDt;
z(217) = qaDt*(LE*z(119)*z(124)*qeDt-2*LE*z(124)*qaDt-2*(LC*z(86)-LB*z(2)-LD*z(119))*qaDt);
z(48) = z(2)*qaDt*qbDt;
z(56) = IxxB*z(48);
z(92) = z(3)*z(20) + z(5)*z(21);
z(100) = z(92)*qaDt*(qcDt-qbDt-qdDt);
z(110) = IxxD*z(100);
z(101) = z(93)*qaDt*(qcDt-qbDt-qdDt);
z(113) = IyyD*z(101);
z(164) = qaDt*(LE*z(119)*qdDt-4*LD*z(124)*(qcDt-qbDt-qdDt));
z(162) = qaDt*(4*LC*z(89)*(qbDt-qcDt)-4*LB*z(1)*qbDt-LE*z(119)*(qcDt-qbDt-qdDt));
z(165) = LE*qaDt*(z(25)*z(124)*qeDt+z(27)*z(119)*(qbDt-qcDt));
z(166) = LE*qaDt*(z(27)*z(124)*qeDt-z(25)*z(119)*(qbDt-qcDt));
z(163) = LE*(qdDt^2+(qbDt-qcDt)^2+2*qdDt*(qbDt-qcDt));
z(239) = z(1)*z(61) + z(2)*z(58) + z(2)*z(60) + z(11)*z(80) + z(11)*z(85) + z(14)*z(82) + z(14)*z(84) + z(19)*z(117) + z(22)*z(116)  ...
+ z(22)*z(149) + z(22)*z(155) + z(26)*z(146) + z(26)*z(156) + z(30)*z(153) + z(30)*z(154) + z(30)*z(206) + z(30)*z(207)  ...
+ z(35)*z(197) + z(35)*z(209) + z(38)*z(202) + z(38)*z(208) + mC*z(87)*z(90) + 0.5*mB*z(62)*z(65) + 0.5*mD*(z(120)*z(125)+4*  ...
z(118)*z(122)+2*z(70)*z(118)*z(125)+2*z(70)*z(120)*z(122)-z(94)*z(118)*z(123)) + 0.25*mF*(2*z(211)*z(222)+2*z(34)*z(212)*z(219)+2*  ...
z(120)*z(183)*z(223)+2*z(131)*z(211)*z(64)+2*z(178)*z(212)*z(64)+2*z(182)*z(212)*z(123)+4*z(25)*z(120)*z(222)+4*z(95)*z(210)*  ...
z(219)+4*z(128)*z(210)*z(221)+4*z(129)*z(210)*z(222)-4*z(120)*z(220)-4*z(210)*z(218)-z(212)*z(224)-4*z(27)*z(120)*z(221)-4*z(70)*  ...
z(120)*z(218)-4*z(70)*z(210)*z(220)-4*z(94)*z(210)*z(123)-2*z(25)*z(211)*z(220)-2*z(27)*z(211)*z(123)-2*z(33)*z(212)*z(221)-2*  ...
z(120)*z(184)*z(224)-2*z(129)*z(211)*z(218)-2*z(169)*z(211)*z(91)-2*z(175)*z(210)*z(223)-2*z(176)*z(210)*z(224)-2*z(176)*z(212)*  ...
z(218)-2*z(184)*z(212)*z(220)-2*z(212)*z(228)*z(91)-z(30)*z(211)*z(160)-z(38)*z(212)*z(160)-z(127)*z(211)*z(217)-z(174)*z(212)*  ...
z(217)) - z(1)*z(56) - z(19)*z(110) - z(22)*z(113) - 0.5*mE*(z(120)*z(164)+z(157)*z(162)+z(27)*z(120)*z(165)+z(70)*z(120)*z(162)+  ...
z(70)*z(157)*z(164)+2*z(94)*z(157)*z(123)-z(25)*z(120)*z(166)-z(95)*z(157)*z(163)-z(128)*z(157)*z(165)-z(129)*z(157)*z(166));
z(55) = IxxB*z(1);
z(57) = IyyB*z(2);
z(79) = IxxC*z(11);
z(81) = IyyC*z(14);
z(108) = IxxD*z(19);
z(111) = IyyD*z(22);
z(147) = IyyE*z(22);
z(143) = IxxE*z(26);
z(150) = IzzE*z(30);
z(203) = IzzF*z(30);
z(193) = IxxF*z(35);
z(198) = IyyF*z(38);
z(231) = IxxA + z(1)*z(55) + z(2)*z(57) + z(11)*z(79) + z(14)*z(81) + z(19)*z(108) + z(22)*z(111) + z(22)*z(147) + z(26)*z(143)  ...
+ z(30)*z(150) + z(30)*z(203) + z(35)*z(193) + z(38)*z(198) + mC*z(87)^2 + 0.25*mB*z(62)^2 + mE*(z(120)^2+z(157)^2+2*z(70)*  ...
z(120)*z(157)) + 0.25*mD*(z(120)^2+4*z(118)^2+4*z(70)*z(118)*z(120)) + 0.25*mF*(z(211)^2+z(212)^2+4*z(120)^2+4*z(210)^2+4*z(25)*  ...
z(120)*z(211)+4*z(120)*z(184)*z(212)+4*z(129)*z(210)*z(211)+4*z(176)*z(210)*z(212)+8*z(70)*z(120)*z(210));
z(158) = LE*z(25);
z(159) = LE*z(27);
z(180) = z(1)*z(174) + z(2)*z(38);
z(213) = z(27)*(2*LE-LF*z(33));
z(214) = LF*z(25);
z(172) = z(10)*z(133) - z(9)*z(131);
z(171) = z(10)*z(99) - z(9)*z(97);
z(170) = z(10)*z(132) - z(9)*z(130);
z(229) = z(34)*z(171) - z(33)*z(170);
z(109) = IxxD*z(94);
z(112) = IyyD*z(95);
z(148) = IyyE*z(95);
z(145) = IxxE*z(128);
z(152) = IzzE*z(129);
z(205) = IzzF*z(129);
z(196) = IxxF*z(175);
z(201) = IyyF*z(176);
z(233) = 0.5*mE*(z(27)*z(120)*z(158)-2*LD*z(95)*z(157)-z(25)*z(120)*z(159)-z(128)*z(157)*z(158)-z(129)*z(157)*z(159)) + 0.25*mF*(  ...
2*LB*z(133)*z(211)+2*LB*z(180)*z(212)+2*z(33)*z(158)*z(212)+4*z(27)*z(120)*z(158)-z(211)*z(213)-z(212)*z(214)-4*LD*z(95)*z(210)-4*  ...
z(128)*z(158)*z(210)-2*LC*z(172)*z(211)-2*LC*z(212)*z(229)-2*LD*z(34)*z(212)-2*z(25)*z(120)*z(213)-2*z(120)*z(184)*z(214)-2*  ...
z(129)*z(210)*z(213)-2*z(176)*z(210)*z(214)) - z(19)*z(109) - z(22)*z(112) - z(22)*z(148) - z(26)*z(145) - z(30)*z(152)  ...
- z(30)*z(205) - z(35)*z(196) - z(38)*z(201) - 0.5*z(232)*z(95)*z(118);
z(234) = z(19)*z(109) + z(22)*z(112) + z(22)*z(148) + z(26)*z(145) + z(30)*z(152) + z(30)*z(205) + z(35)*z(196) + z(38)*z(201)  ...
+ 0.5*z(232)*z(95)*z(118) - 0.5*mE*(z(27)*z(120)*z(158)-2*LD*z(95)*z(157)-z(25)*z(120)*z(159)-z(128)*z(157)*z(158)-z(129)*z(157)*  ...
z(159)) - 0.25*mF*(2*z(33)*z(158)*z(212)+4*z(27)*z(120)*z(158)-z(211)*z(213)-z(212)*z(214)-4*LD*z(95)*z(210)-4*z(128)*z(158)*  ...
z(210)-2*LC*z(172)*z(211)-2*LC*z(212)*z(229)-2*LD*z(34)*z(212)-2*z(25)*z(120)*z(213)-2*z(120)*z(184)*z(214)-2*z(129)*z(210)*  ...
z(213)-2*z(176)*z(210)*z(214));
z(144) = IxxE*z(27);
z(194) = IxxF*z(183);
z(215) = LF*z(27)*z(33);
z(151) = IzzE*z(25);
z(204) = IzzF*z(25);
z(199) = IyyF*z(184);
z(235) = z(26)*z(144) + z(35)*z(194) + 0.25*mF*(z(211)*z(215)+2*LE*z(182)*z(212)+2*z(25)*z(120)*z(215)+2*z(129)*z(210)*z(215)-  ...
z(212)*z(214)-4*LD*z(95)*z(210)-4*LE*z(94)*z(210)-2*LD*z(34)*z(212)-2*LE*z(27)*z(211)-2*z(120)*z(184)*z(214)-2*z(176)*z(210)*  ...
z(214)) - z(30)*z(151) - z(30)*z(204) - z(38)*z(199) - 0.5*z(232)*z(95)*z(118) - 0.5*mE*z(157)*(LE*z(94)+2*LD*z(95));
z(195) = IxxF*z(33);
z(200) = IyyF*z(34);
z(216) = LF*z(34);
z(236) = IyyE*z(22) + z(35)*z(195) + z(38)*z(200) - 0.25*mF*z(216)*(z(211)+2*z(25)*z(120)+2*z(129)*z(210));
z(238) = IzzF*z(30) + 0.25*z(237)*(z(212)+2*z(120)*z(184)+2*z(176)*z(210));
z(337) = z(291)*z(5)*z(87) + 0.5*z(290)*z(5)*z(62) + z(293)*z(5)*(z(120)+z(157)) + 0.5*z(292)*z(5)*(z(120)+2*z(118)) + 0.5*  ...
z(294)*(2*z(5)*z(120)+2*z(5)*z(210)-z(31)*z(211)-z(39)*z(212)) - FN*(z(120)*z(302)+z(210)*z(302)+z(211)*z(310)+z(212)*z(314))  ...
- z(239) - z(231)*qaDDt - z(233)*qbDDt - z(234)*qcDDt - z(235)*qdDDt - z(236)*qeDDt - z(238)*qfDDt;
TA = -z(337);
z(300) = z(297)*z(2) - z(296)*z(7);
z(298) = z(296)*z(4) + z(297)*z(1);
z(318) = z(10)*z(300) - z(9)*z(298);
z(295) = z(27)*(LE-LF*z(33));
z(121) = (2*LC*z(86)-2*LB*z(2)-LD*z(119))*qaDt^2;
z(98) = z(1)*z(92) + z(2)*z(19);
z(59) = z(50)*z(53) - z(51)*z(52);
z(83) = z(73)*z(77) - z(74)*z(76);
z(115) = z(102)*z(106) - z(103)*z(105);
z(63) = LB*z(2)*qaDt^2;
z(88) = (2*LB*z(2)-LC*z(86))*qaDt^2;
z(161) = qaDt*(LE*z(124)*(qaDt-z(119)*qeDt)+2*(LC*z(86)-LB*z(2)-LD*z(119))*qaDt);
z(179) = z(1)*z(173) + z(2)*z(35);
z(226) = z(33)*z(171) + z(34)*z(170);
z(260) = z(94)*z(110) + z(95)*z(113) + 0.25*mD*(2*LB*z(1)*z(121)+2*LD*z(18)*z(91)+4*LC*z(9)*z(64)-4*LB*z(9)*z(91)-4*LD*z(95)*  ...
z(122)-2*LB*z(98)*z(123)-2*LC*z(18)*z(123)-2*LC*z(67)*z(121)-2*LD*z(97)*z(64)-LD*z(93)*z(121)) - z(59) - z(83) - z(70)*z(115)  ...
- z(94)*z(117) - z(95)*z(116) - z(95)*z(149) - z(95)*z(155) - z(128)*z(146) - z(128)*z(156) - z(129)*z(153) - z(129)*z(154)  ...
- z(129)*z(206) - z(129)*z(207) - z(175)*z(197) - z(175)*z(209) - z(176)*z(202) - z(176)*z(208) - 0.25*z(259)*z(1)*z(63)  ...
- 0.25*mC*(2*LB*z(1)*z(88)+2*LB*z(9)*z(91)-2*LC*z(9)*z(64)-LC*z(67)*z(88)) - 0.25*mE*(z(158)*z(165)+z(159)*z(166)+2*LD*z(163)+  ...
z(27)*z(158)*z(164)+z(126)*z(158)*z(161)+z(127)*z(159)*z(161)+2*LB*z(2)*z(160)+2*LC*z(17)*z(163)+2*LC*z(67)*z(161)+2*LC*z(170)*  ...
z(165)+2*LC*z(172)*z(166)+2*LD*z(93)*z(161)+2*z(130)*z(158)*z(64)+2*z(131)*z(159)*z(64)+4*LB*z(9)*z(91)+4*LB*z(98)*z(123)+4*LC*  ...
z(18)*z(123)+4*LD*z(97)*z(64)-4*LC*z(9)*z(64)-4*LD*z(18)*z(91)-2*LB*z(1)*z(161)-2*LB*z(99)*z(163)-2*LB*z(132)*z(165)-2*LB*z(133)*  ...
z(166)-2*LC*z(14)*z(160)-2*LD*z(22)*z(160)-2*LD*z(95)*z(162)-2*z(25)*z(158)*z(123)-2*z(27)*z(159)*z(123)-2*z(158)*z(167)*z(91)-2*  ...
z(159)*z(169)*z(91)-z(25)*z(159)*z(164)-z(26)*z(158)*z(160)-z(30)*z(159)*z(160)-z(128)*z(158)*z(162)-z(129)*z(159)*z(162))  ...
- 0.25*mF*(2*z(213)*z(222)+4*LD*z(219)+4*z(158)*z(221)+2*LB*z(1)*z(217)+2*LB*z(2)*z(160)+2*LB*z(179)*z(223)+2*LB*z(180)*z(224)+2*  ...
z(33)*z(158)*z(224)+2*z(34)*z(214)*z(219)+2*z(131)*z(213)*z(64)+2*z(178)*z(214)*z(64)+2*z(182)*z(214)*z(123)+4*LB*z(9)*z(91)+4*LB*  ...
z(98)*z(123)+4*LC*z(17)*z(219)+4*LC*z(18)*z(123)+4*LC*z(170)*z(221)+4*LC*z(172)*z(222)+4*LD*z(97)*z(64)+4*z(27)*z(158)*z(220)+4*  ...
z(130)*z(158)*z(64)-z(214)*z(224)-4*LB*z(99)*z(219)-4*LB*z(132)*z(221)-4*LB*z(133)*z(222)-4*LC*z(9)*z(64)-4*LD*z(18)*z(91)-4*LD*  ...
z(95)*z(218)-4*z(25)*z(158)*z(123)-4*z(128)*z(158)*z(218)-4*z(158)*z(167)*z(91)-2*LC*z(14)*z(160)-2*LC*z(67)*z(217)-2*LC*z(226)*  ...
z(223)-2*LC*z(229)*z(224)-2*LD*z(22)*z(160)-2*LD*z(33)*z(223)-2*LD*z(34)*z(224)-2*LD*z(93)*z(217)-2*z(25)*z(213)*z(220)-2*z(26)*  ...
z(158)*z(160)-2*z(27)*z(213)*z(123)-2*z(33)*z(214)*z(221)-2*z(34)*z(158)*z(223)-2*z(126)*z(158)*z(217)-2*z(129)*z(213)*z(218)-2*  ...
z(169)*z(213)*z(91)-2*z(176)*z(214)*z(218)-2*z(184)*z(214)*z(220)-2*z(214)*z(228)*z(91)-z(30)*z(213)*z(160)-z(38)*z(214)*z(160)-  ...
z(127)*z(213)*z(217)-z(174)*z(214)*z(217));
z(114) = IzzD*z(70);
z(249) = z(240) + z(70)*z(114) + z(94)*z(109) + z(95)*z(112) + z(95)*z(148) + z(128)*z(145) + z(129)*z(152) + z(129)*z(205)  ...
+ z(175)*z(196) + z(176)*z(201) + 0.25*mC*(z(241)-4*z(242)*z(10)) + 0.25*mD*(z(248)+4*z(246)+4*z(247)+4*z(244)*z(17)-8*z(242)*  ...
z(10)-4*z(245)*z(99)) + 0.25*mF*(z(243)+z(213)^2+z(214)^2+4*z(158)^2+8*z(244)*z(17)+4*LC*z(172)*z(213)+4*LC*z(214)*z(229)+4*LD*  ...
z(34)*z(214)+8*LC*z(158)*z(170)-8*z(242)*z(10)-8*z(245)*z(99)-8*LB*z(132)*z(158)-4*LB*z(133)*z(213)-4*LB*z(180)*z(214)-4*z(33)*  ...
z(158)*z(214)) - 0.25*mE*(8*z(242)*z(10)+8*z(245)*z(99)+4*LB*z(132)*z(158)+4*LB*z(133)*z(159)-4*z(246)-4*z(247)-4*z(248)-8*  ...
z(244)*z(17)-z(158)^2-z(159)^2-4*LC*z(158)*z(170)-4*LC*z(159)*z(172));
z(252) = 0.25*mE*(4*z(242)*z(10)+4*z(245)*z(99)+2*LB*z(132)*z(158)+2*LB*z(133)*z(159)-4*z(247)-4*z(248)-8*z(244)*z(17)-z(158)^2-z(159)^2-  ...
4*LC*z(158)*z(170)-4*LC*z(159)*z(172)) - IzzC - z(70)*z(114) - z(94)*z(109) - z(95)*z(112) - z(95)*z(148) - z(128)*z(145)  ...
- z(129)*z(152) - z(129)*z(205) - z(175)*z(196) - z(176)*z(201) - 0.25*z(250)*(LC-2*LB*z(10)) - 0.25*mD*(z(248)+4*z(247)+4*  ...
z(244)*z(17)-4*z(242)*z(10)-2*z(245)*z(99)) - 0.25*mF*(z(251)+z(213)^2+z(214)^2+4*z(158)^2+8*z(244)*z(17)+4*LC*z(172)*z(213)+4*LC*  ...
z(214)*z(229)+4*LD*z(34)*z(214)+8*LC*z(158)*z(170)-4*z(242)*z(10)-4*z(245)*z(99)-4*LB*z(132)*z(158)-4*z(33)*z(158)*z(214)-2*LB*  ...
z(133)*z(213)-2*LB*z(180)*z(214));
z(255) = IzzD*z(70) + z(129)*z(151) + z(129)*z(204) + z(176)*z(199) + 0.25*mF*(4*z(248)+z(214)^2+4*z(244)*z(17)+2*LB*z(133)*  ...
z(215)+2*LC*z(214)*z(229)+2*LE*z(27)*z(213)+4*LD*z(34)*z(214)+4*LE*z(25)*z(158)-4*z(245)*z(99)-4*z(253)*z(98)-4*z(254)*z(18)-  ...
z(213)*z(215)-2*LB*z(180)*z(214)-2*LC*z(172)*z(215)-2*LE*z(182)*z(214)-2*z(33)*z(158)*z(214)) - z(128)*z(144) - z(175)*z(194)  ...
- 0.25*z(232)*(2*LB*z(99)-LD-2*LC*z(17)) - 0.25*mE*(2*z(253)*z(98)+2*z(254)*z(18)+4*z(245)*z(99)-4*z(248)-4*z(244)*z(17)-LE*  ...
z(25)*z(158)-LE*z(27)*z(159));
z(256) = 0.5*mE*(z(27)*z(120)*z(158)-2*LD*z(95)*z(157)-z(25)*z(120)*z(159)-z(128)*z(157)*z(158)-z(129)*z(157)*z(159)) + 0.25*mF*(  ...
2*LB*z(133)*z(211)+2*LB*z(180)*z(212)+2*z(33)*z(158)*z(212)+4*z(27)*z(120)*z(158)-z(211)*z(213)-z(212)*z(214)-4*LD*z(95)*z(210)-4*  ...
z(128)*z(158)*z(210)-2*LC*z(172)*z(211)-2*LC*z(212)*z(229)-2*LD*z(34)*z(212)-2*z(25)*z(120)*z(213)-2*z(120)*z(184)*z(214)-2*  ...
z(129)*z(210)*z(213)-2*z(176)*z(210)*z(214)) - z(94)*z(108) - z(95)*z(111) - z(95)*z(147) - z(128)*z(143) - z(129)*z(150)  ...
- z(129)*z(203) - z(175)*z(193) - z(176)*z(198) - 0.5*z(232)*z(95)*z(118);
z(257) = -IyyE*z(95) - z(175)*z(195) - z(176)*z(200) - 0.25*mF*z(216)*(2*LB*z(133)-z(213)-2*LC*z(172));
z(258) = -IzzF*z(129) - 0.25*z(237)*(z(214)+2*LC*z(229)+2*LD*z(34)-2*LB*z(180)-2*z(33)*z(158));
z(338) = -0.5*z(321)*z(7) - 0.5*z(291)*(2*LB*z(7)-LC*z(15)) - 0.5*z(292)*(2*LB*z(7)-2*LC*z(15)-LD*z(23)) - 0.5*z(293)*(2*LB*z(7)-  ...
2*LC*z(15)-2*LD*z(23)-z(28)*z(158)-z(31)*z(159)) - FN*(LB*z(300)-LC*z(318)-LD*z(306)-z(158)*z(308)-z(214)*z(314)-z(295)*z(310))  ...
- 0.5*z(294)*(2*LB*z(7)-2*LC*z(15)-2*LD*z(23)-2*z(28)*z(158)-z(31)*z(213)-z(39)*z(214)) - z(260) - z(249)*qbDDt - z(252)*qcDDt  ...
- z(255)*qdDDt - z(256)*qaDDt - z(257)*qeDDt - z(258)*qfDDt;
z(343) = z(338)/z(3);
TB = z(343);
z(268) = z(83) + z(70)*z(115) + z(94)*z(117) + z(95)*z(116) + z(95)*z(149) + z(95)*z(155) + z(128)*z(146) + z(128)*z(156)  ...
+ z(129)*z(153) + z(129)*z(154) + z(129)*z(206) + z(129)*z(207) + z(175)*z(197) + z(175)*z(209) + z(176)*z(202) + z(176)*z(208)  ...
+ 0.25*mE*(z(158)*z(165)+z(159)*z(166)+2*LD*z(163)+z(27)*z(158)*z(164)+z(126)*z(158)*z(161)+z(127)*z(159)*z(161)+2*LC*z(17)*  ...
z(163)+2*LC*z(67)*z(161)+2*LC*z(170)*z(165)+2*LC*z(172)*z(166)+2*LD*z(93)*z(161)+2*z(130)*z(158)*z(64)+2*z(131)*z(159)*z(64)+4*LC*  ...
z(18)*z(123)+4*LD*z(97)*z(64)-4*LC*z(9)*z(64)-4*LD*z(18)*z(91)-2*LC*z(14)*z(160)-2*LD*z(22)*z(160)-2*LD*z(95)*z(162)-2*z(25)*  ...
z(158)*z(123)-2*z(27)*z(159)*z(123)-2*z(158)*z(167)*z(91)-2*z(159)*z(169)*z(91)-z(25)*z(159)*z(164)-z(26)*z(158)*z(160)-z(30)*  ...
z(159)*z(160)-z(128)*z(158)*z(162)-z(129)*z(159)*z(162)) + 0.25*mF*(2*z(213)*z(222)+4*LD*z(219)+4*z(158)*z(221)+2*z(33)*z(158)*  ...
z(224)+2*z(34)*z(214)*z(219)+2*z(131)*z(213)*z(64)+2*z(178)*z(214)*z(64)+2*z(182)*z(214)*z(123)+4*LC*z(17)*z(219)+4*LC*z(18)*  ...
z(123)+4*LC*z(170)*z(221)+4*LC*z(172)*z(222)+4*LD*z(97)*z(64)+4*z(27)*z(158)*z(220)+4*z(130)*z(158)*z(64)-z(214)*z(224)-4*LC*z(9)*  ...
z(64)-4*LD*z(18)*z(91)-4*LD*z(95)*z(218)-4*z(25)*z(158)*z(123)-4*z(128)*z(158)*z(218)-4*z(158)*z(167)*z(91)-2*LC*z(14)*z(160)-2*LC*  ...
z(67)*z(217)-2*LC*z(226)*z(223)-2*LC*z(229)*z(224)-2*LD*z(22)*z(160)-2*LD*z(33)*z(223)-2*LD*z(34)*z(224)-2*LD*z(93)*z(217)-2*  ...
z(25)*z(213)*z(220)-2*z(26)*z(158)*z(160)-2*z(27)*z(213)*z(123)-2*z(33)*z(214)*z(221)-2*z(34)*z(158)*z(223)-2*z(126)*z(158)*  ...
z(217)-2*z(129)*z(213)*z(218)-2*z(169)*z(213)*z(91)-2*z(176)*z(214)*z(218)-2*z(184)*z(214)*z(220)-2*z(214)*z(228)*z(91)-z(30)*  ...
z(213)*z(160)-z(38)*z(214)*z(160)-z(127)*z(213)*z(217)-z(174)*z(214)*z(217)) - z(94)*z(110) - z(95)*z(113) - 0.25*z(250)*(z(67)*  ...
z(88)+2*z(9)*z(64)) - 0.25*mD*(2*LD*z(18)*z(91)+4*LC*z(9)*z(64)-4*LD*z(95)*z(122)-2*LC*z(18)*z(123)-2*LC*z(67)*z(121)-2*LD*z(97)*  ...
z(64)-LD*z(93)*z(121));
z(263) = z(261) + z(70)*z(114) + z(94)*z(109) + z(95)*z(112) + z(95)*z(148) + z(128)*z(145) + z(129)*z(152) + z(129)*z(205)  ...
+ z(175)*z(196) + z(176)*z(201) + 0.25*mD*(z(262)+4*z(244)*z(17)) + 0.25*mE*(z(251)+z(158)^2+z(159)^2+8*z(244)*z(17)+4*LC*z(158)*  ...
z(170)+4*LC*z(159)*z(172)) + 0.25*mF*(z(251)+z(213)^2+z(214)^2+4*z(158)^2+8*z(244)*z(17)+4*LC*z(172)*z(213)+4*LC*z(214)*z(229)+4*  ...
LD*z(34)*z(214)+8*LC*z(158)*z(170)-4*z(33)*z(158)*z(214));
z(264) = z(128)*z(144) + z(175)*z(194) + 0.25*mE*(2*z(254)*z(18)-4*z(248)-4*z(244)*z(17)-LE*z(25)*z(158)-LE*z(27)*z(159))  ...
- IzzD*z(70) - z(129)*z(151) - z(129)*z(204) - z(176)*z(199) - 0.25*z(232)*(LD+2*LC*z(17)) - 0.25*mF*(4*z(248)+z(214)^2+4*z(244)*  ...
z(17)+2*LC*z(214)*z(229)+2*LE*z(27)*z(213)+4*LD*z(34)*z(214)+4*LE*z(25)*z(158)-4*z(254)*z(18)-z(213)*z(215)-2*LC*z(172)*z(215)-2*  ...
LE*z(182)*z(214)-2*z(33)*z(158)*z(214));
z(265) = z(94)*z(108) + z(95)*z(111) + z(95)*z(147) + z(128)*z(143) + z(129)*z(150) + z(129)*z(203) + z(175)*z(193) + z(176)*z(198)  ...
+ 0.5*z(232)*z(95)*z(118) - 0.5*mE*(z(27)*z(120)*z(158)-2*LD*z(95)*z(157)-z(25)*z(120)*z(159)-z(128)*z(157)*z(158)-z(129)*z(157)*  ...
z(159)) - 0.25*mF*(2*z(33)*z(158)*z(212)+4*z(27)*z(120)*z(158)-z(211)*z(213)-z(212)*z(214)-4*LD*z(95)*z(210)-4*z(128)*z(158)*  ...
z(210)-2*LC*z(172)*z(211)-2*LC*z(212)*z(229)-2*LD*z(34)*z(212)-2*z(25)*z(120)*z(213)-2*z(120)*z(184)*z(214)-2*z(129)*z(210)*  ...
z(213)-2*z(176)*z(210)*z(214));
z(266) = IyyE*z(95) + z(175)*z(195) + z(176)*z(200) - 0.25*mF*z(216)*(z(213)+2*LC*z(172));
z(267) = IzzF*z(129) + 0.25*z(237)*(z(214)+2*LC*z(229)+2*LD*z(34)-2*z(33)*z(158));
z(339) = -0.5*z(323)*z(15) - 0.5*z(292)*(LD*z(23)+2*LC*z(15)) - FN*(LC*z(318)+LD*z(306)+z(158)*z(308)+z(214)*z(314)+z(295)*  ...
z(310)) - 0.5*z(293)*(z(28)*z(158)+z(31)*z(159)+2*LC*z(15)+2*LD*z(23)) - 0.5*z(294)*(z(31)*z(213)+z(39)*z(214)+2*LC*z(15)+2*LD*  ...
z(23)+2*z(28)*z(158)) - z(268) - z(252)*qbDDt - z(263)*qcDDt - z(264)*qdDDt - z(265)*qaDDt - z(266)*qeDDt - z(267)*qfDDt;
z(344) = z(339)/z(3);
TC = -z(344);
z(96) = z(1)*z(19) - z(2)*z(92);
z(277) = z(27)*z(146) + z(27)*z(156) + z(183)*z(197) + z(183)*z(209) + 0.25*z(232)*(2*z(18)*z(91)-4*z(95)*z(122)-2*z(97)*z(64)-  ...
z(93)*z(121)) + 0.25*mE*(2*LE*z(123)+LE*z(19)*z(160)+LE*z(94)*z(162)+2*LD*z(22)*z(160)+2*LD*z(95)*z(162)+2*LE*z(17)*z(91)+4*LD*  ...
z(18)*z(91)-2*LD*z(163)-4*LD*z(97)*z(64)-2*LD*z(93)*z(161)-2*LE*z(96)*z(64)-LE*z(25)*z(165)-LE*z(27)*z(166)-LE*z(92)*z(161))  ...
- z(115) - z(25)*z(153) - z(25)*z(154) - z(25)*z(206) - z(25)*z(207) - z(184)*z(202) - z(184)*z(208) - 0.25*mF*(4*LD*z(219)+  ...
z(30)*z(215)*z(160)+z(127)*z(215)*z(217)+2*LE*z(182)*z(224)+2*z(25)*z(215)*z(220)+2*z(27)*z(215)*z(123)+2*z(34)*z(214)*z(219)+2*  ...
z(129)*z(215)*z(218)+2*z(169)*z(215)*z(91)+2*z(178)*z(214)*z(64)+2*z(182)*z(214)*z(123)+4*LD*z(97)*z(64)+4*LE*z(25)*z(221)+4*LE*  ...
z(27)*z(222)+4*LE*z(96)*z(64)-4*LE*z(123)-2*z(215)*z(222)-z(214)*z(224)-4*LD*z(18)*z(91)-4*LD*z(95)*z(218)-4*LE*z(17)*z(91)-4*LE*  ...
z(94)*z(218)-2*LD*z(22)*z(160)-2*LD*z(33)*z(223)-2*LD*z(34)*z(224)-2*LD*z(93)*z(217)-2*LE*z(19)*z(160)-2*LE*z(92)*z(217)-2*LE*  ...
z(181)*z(223)-2*z(33)*z(214)*z(221)-2*z(131)*z(215)*z(64)-2*z(176)*z(214)*z(218)-2*z(184)*z(214)*z(220)-2*z(214)*z(228)*z(91)-  ...
z(38)*z(214)*z(160)-z(174)*z(214)*z(217));
z(271) = z(269) + z(25)*z(151) + z(25)*z(204) + z(27)*z(144) + z(183)*z(194) + z(184)*z(199) + 0.25*mF*(z(270)+z(214)^2+z(215)^2+  ...
4*LD*z(34)*z(214)-4*LE*z(27)*z(215)-4*LE*z(182)*z(214));
z(272) = z(114) + z(25)*z(152) + z(25)*z(205) + z(184)*z(201) + 0.25*mF*(4*z(248)+z(214)^2+4*z(244)*z(17)+2*LB*z(133)*z(215)+2*LC*  ...
z(214)*z(229)+2*LE*z(27)*z(213)+4*LD*z(34)*z(214)+4*LE*z(25)*z(158)-4*z(245)*z(99)-4*z(253)*z(98)-4*z(254)*z(18)-z(213)*z(215)-2*  ...
LB*z(180)*z(214)-2*LC*z(172)*z(215)-2*LE*z(182)*z(214)-2*z(33)*z(158)*z(214)) - z(27)*z(145) - z(183)*z(196) - 0.25*z(232)*(2*LB*  ...
z(99)-LD-2*LC*z(17)) - 0.25*mE*(2*z(253)*z(98)+2*z(254)*z(18)+4*z(245)*z(99)-4*z(248)-4*z(244)*z(17)-LE*z(25)*z(158)-LE*z(27)*  ...
z(159));
z(273) = z(27)*z(145) + z(183)*z(196) + 0.25*mE*(2*z(254)*z(18)-4*z(248)-4*z(244)*z(17)-LE*z(25)*z(158)-LE*z(27)*z(159))  ...
- z(114) - z(25)*z(152) - z(25)*z(205) - z(184)*z(201) - 0.25*z(232)*(LD+2*LC*z(17)) - 0.25*mF*(4*z(248)+z(214)^2+4*z(244)*z(17)+  ...
2*LC*z(214)*z(229)+2*LE*z(27)*z(213)+4*LD*z(34)*z(214)+4*LE*z(25)*z(158)-4*z(254)*z(18)-z(213)*z(215)-2*LC*z(172)*z(215)-2*LE*  ...
z(182)*z(214)-2*z(33)*z(158)*z(214));
z(274) = z(27)*z(143) + z(183)*z(193) + 0.25*mF*(z(211)*z(215)+2*LE*z(182)*z(212)+2*z(25)*z(120)*z(215)+2*z(129)*z(210)*z(215)-  ...
z(212)*z(214)-4*LD*z(95)*z(210)-4*LE*z(94)*z(210)-2*LD*z(34)*z(212)-2*LE*z(27)*z(211)-2*z(120)*z(184)*z(214)-2*z(176)*z(210)*  ...
z(214)) - z(25)*z(150) - z(25)*z(203) - z(184)*z(198) - 0.5*z(232)*z(95)*z(118) - 0.5*mE*z(157)*(LE*z(94)+2*LD*z(95));
z(275) = -IzzF*z(25) - 0.25*z(237)*(z(214)+2*LD*z(34)-2*LE*z(182));
z(276) = z(183)*z(195) - z(184)*z(200) - 0.25*mF*z(216)*(z(215)-2*LE*z(27));
z(340) = 0.5*z(325)*z(23) + 0.5*z(293)*(LE*z(20)+2*LD*z(23)) + FN*(LD*z(306)+LE*z(304)+z(214)*z(314)-z(215)*z(310)) - 0.5*z(294)*(  ...
z(31)*z(215)-2*LD*z(23)-2*LE*z(20)-z(39)*z(214)) - z(277) - z(271)*qdDDt - z(272)*qbDDt - z(273)*qcDDt - z(274)*qaDDt - z(275)*qfDDt -   ...
z(276)*qeDDt;
z(345) = z(340)/z(3);
TD = z(345);
z(283) = z(149) + z(155) + z(33)*z(197) + z(33)*z(209) + z(34)*z(202) + z(34)*z(208) - 0.25*mF*z(216)*(2*z(222)+2*z(131)*z(64)-2*  ...
z(25)*z(220)-2*z(27)*z(123)-2*z(129)*z(218)-2*z(169)*z(91)-z(30)*z(160)-z(127)*z(217));
z(278) = IyyE + z(33)*z(195) + z(34)*z(200) + 0.25*mF*z(216)^2;
z(279) = z(147) + z(33)*z(193) + z(34)*z(198) - 0.25*mF*z(216)*(z(211)+2*z(25)*z(120)+2*z(129)*z(210));
z(280) = z(148) + z(33)*z(196) + z(34)*z(201) - 0.25*mF*z(216)*(z(213)+2*LC*z(172));
z(281) = -z(148) - z(33)*z(196) - z(34)*z(201) - 0.25*mF*z(216)*(2*LB*z(133)-z(213)-2*LC*z(172));
z(282) = z(33)*z(194) - z(34)*z(199) - 0.25*mF*z(216)*(z(215)-2*LE*z(27));
z(341) = 0.5*z(216)*(z(294)*z(31)+2*FN*z(310)) - z(283) - z(278)*qeDDt - z(279)*qaDDt - z(280)*qcDDt - z(281)*qbDDt - z(282)*qdDDt;
z(346) = z(341)/z(23);
TE = -z(346);
z(289) = z(206) + z(207) + 0.25*z(237)*(2*z(34)*z(219)+2*z(178)*z(64)+2*z(182)*z(123)-z(224)-2*z(33)*z(221)-2*z(176)*z(218)-2*  ...
z(184)*z(220)-2*z(228)*z(91)-z(38)*z(160)-z(174)*z(217));
z(285) = z(203) + 0.25*z(237)*(z(212)+2*z(120)*z(184)+2*z(176)*z(210));
z(286) = z(205) + 0.25*z(237)*(z(214)+2*LC*z(229)+2*LD*z(34)-2*z(33)*z(158));
z(287) = -z(204) - 0.25*z(237)*(z(214)+2*LD*z(34)-2*LE*z(182));
z(288) = -z(205) - 0.25*z(237)*(z(214)+2*LC*z(229)+2*LD*z(34)-2*LB*z(180)-2*z(33)*z(158));
z(342) = -z(328)*z(314) - 0.5*z(329)*z(39) - z(289) - z(284)*qfDDt - z(285)*qaDDt - z(286)*qcDDt - z(287)*qdDDt - z(288)*qbDDt;
z(347) = z(342)/z(32);
TF = -z(347);
CbX = LA - LB*z(1);
CbY = hA + LB*z(4);
CbZ = LB*z(6);
DcX = LA + LC*z(11) - LB*z(1);
DcY = hA + LB*z(4) + LC*z(12);
DcZ = LB*z(6) + LC*z(13);
EdX = LA + LC*z(11) + LD*z(19) - LB*z(1);
EdY = hA + LB*z(4) + LC*z(12) + LD*z(20);
EdZ = LB*z(6) + LC*z(13) + LD*z(21);
FeX = LA + LC*z(11) + LD*z(19) - LB*z(1) - LE*z(22);
FeY = hA + LB*z(4) + LC*z(12) + LD*z(20) - LE*z(23);
FeZ = LB*z(6) + LC*z(13) + LD*z(21) - LE*z(24);
QX = LA + LC*z(11) + LD*z(19) + LF*z(35) - LB*z(1) - LE*z(22);
QY = hA + LB*z(4) + LC*z(12) + LD*z(20) + LF*z(36) - LE*z(23);
QZ = LB*z(6) + LC*z(13) + LD*z(21) + LF*z(37) - LE*z(24);

Output = zeros( 1, 43 );
Output(1) = t;
Output(2) = 0.0;
Output(3) = hA;
Output(4) = 0.0;
Output(5) = LA;
Output(6) = hA;
Output(7) = 0.0;
Output(8) = CbX;
Output(9) = CbY;
Output(10) = CbZ;
Output(11) = DcX;
Output(12) = DcY;
Output(13) = DcZ;
Output(14) = EdX;
Output(15) = EdY;
Output(16) = EdZ;
Output(17) = FeX;
Output(18) = FeY;
Output(19) = FeZ;
Output(20) = QX;
Output(21) = QY;
Output(22) = QZ;
Output(23) = px;
Output(24) = py;
Output(25) = pz;

Output(26) = t;
Output(27) = qa*RADtoDEG;                             % Converted to deg
Output(28) = qb*RADtoDEG;                             % Converted to deg
Output(29) = qc*RADtoDEG;                             % Converted to deg
Output(30) = qd*RADtoDEG;                             % Converted to deg
Output(31) = qe*RADtoDEG;                             % Converted to deg
Output(32) = qf*RADtoDEG;                             % Converted to deg

Output(33) = t;
Output(34) = QX;
Output(35) = QY;
Output(36) = QZ;

Output(37) = t;
Output(38) = TA;
Output(39) = TB;
Output(40) = TC;
Output(41) = TD;
Output(42) = TE;
Output(43) = TF;
end


%===========================================================================
function OutputToScreenOrFile( Output, shouldPrintToScreen, shouldPrintToFile )
%===========================================================================
persistent FileIdentifier hasHeaderInformationBeenWritten;

if( isempty(Output) ),
   if( ~isempty(FileIdentifier) ),
      for( i = 1 : 4 ),  fclose( FileIdentifier(i) );  end
      clear FileIdentifier;
      fprintf( 1, '\n Output is in the files MIPSI.i  (i=1,2,3,4)\n\n' );
   end
   clear hasHeaderInformationBeenWritten;
   return;
end

if( isempty(hasHeaderInformationBeenWritten) ),
   if( shouldPrintToScreen ),
      fprintf( 1,                '%%       t             AoX            AoY            AoZ            BaX            BaY            BaZ            CbX            CbY            CbZ            DcX            DcY            DcZ            EdX            EdY            EdZ            FeX            FeY            FeZ            QX             QY             QZ            RockX          RockY          RockZ\n' );
      fprintf( 1,                '%%     (sec)           (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)\n\n' );
   end
   if( shouldPrintToFile && isempty(FileIdentifier) ),
      FileIdentifier = zeros( 1, 4 );
      FileIdentifier(1) = fopen('MIPSI.1', 'wt');   if( FileIdentifier(1) == -1 ), error('Error: unable to open file MIPSI.1'); end
      fprintf(FileIdentifier(1), '%% FILE: MIPSI.1\n%%\n' );
      fprintf(FileIdentifier(1), '%%       t             AoX            AoY            AoZ            BaX            BaY            BaZ            CbX            CbY            CbZ            DcX            DcY            DcZ            EdX            EdY            EdZ            FeX            FeY            FeZ            QX             QY             QZ            RockX          RockY          RockZ\n' );
      fprintf(FileIdentifier(1), '%%     (sec)           (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)            (m)\n\n' );
      FileIdentifier(2) = fopen('MIPSI.2', 'wt');   if( FileIdentifier(2) == -1 ), error('Error: unable to open file MIPSI.2'); end
      fprintf(FileIdentifier(2), '%% FILE: MIPSI.2\n%%\n' );
      fprintf(FileIdentifier(2), '%%       t             qa             qb             qc             qd             qe             qf\n' );
      fprintf(FileIdentifier(2), '%%     (sec)          (deg)          (deg)          (deg)          (deg)          (deg)          (deg)\n\n' );
      FileIdentifier(3) = fopen('MIPSI.3', 'wt');   if( FileIdentifier(3) == -1 ), error('Error: unable to open file MIPSI.3'); end
      fprintf(FileIdentifier(3), '%% FILE: MIPSI.3\n%%\n' );
      fprintf(FileIdentifier(3), '%%       t             QX             QY             QZ\n' );
      fprintf(FileIdentifier(3), '%%     (sec)           (m)            (m)            (m)\n\n' );
      FileIdentifier(4) = fopen('MIPSI.4', 'wt');   if( FileIdentifier(4) == -1 ), error('Error: unable to open file MIPSI.4'); end
      fprintf(FileIdentifier(4), '%% FILE: MIPSI.4\n%%\n' );
      fprintf(FileIdentifier(4), '%%       t             TA             TB             TC             TD             TE             TF\n' );
      fprintf(FileIdentifier(4), '%%     (sec)         (UNITS)        (UNITS)        (UNITS)        (UNITS)        (UNITS)        (UNITS)\n\n' );
   end
   hasHeaderInformationBeenWritten = 1;
end

if( shouldPrintToScreen ), WriteNumericalData( 1,                 Output(1:25) );  end
if( shouldPrintToFile ),   WriteNumericalData( FileIdentifier(1), Output(1:25) );  end
if( shouldPrintToFile ),   WriteNumericalData( FileIdentifier(2), Output(26:32) );  end
if( shouldPrintToFile ),   WriteNumericalData( FileIdentifier(3), Output(33:36) );  end
if( shouldPrintToFile ),   WriteNumericalData( FileIdentifier(4), Output(37:43) );  end
end


%===========================================================================
function WriteNumericalData( fileIdentifier, Output )
%===========================================================================
numberOfOutputQuantities = length( Output );
if( numberOfOutputQuantities > 0 ),
   for( i = 1 : numberOfOutputQuantities ),
      fprintf( fileIdentifier, ' %- 14.6E', Output(i) );
   end
   fprintf( fileIdentifier, '\n' );
end
end



%===========================================================================
function PlotOutputFiles
%===========================================================================

figure;
data = load( 'MIPSI.2' ); 
plot( data(:,1),data(:,2),'-b', data(:,1),data(:,3),'-.g', data(:,1),data(:,4),'--r', data(:,1),data(:,5),'-m', data(:,1),data(:,6),'-.k', data(:,1),data(:,7),'--b', 'LineWidth',3 );
legend( 'qa (deg)', 'qb (deg)', 'qc (deg)', 'qd (deg)', 'qe (deg)', 'qf (deg)' );
xlabel('t (sec)');   % ylabel('Some y-axis label');   title('Some plot title');
clear data;

figure;
data = load( 'MIPSI.3' ); 
plot( data(:,1),data(:,2),'-b', data(:,1),data(:,3),'-.g', data(:,1),data(:,4),'--r', 'LineWidth',3 );
legend( 'QX (m)', 'QY (m)', 'QZ (m)' );
xlabel('t (sec)');   % ylabel('Some y-axis label');   title('Some plot title');
clear data;

figure;
data = load( 'MIPSI.4' ); 
plot( data(:,1),data(:,2),'-b', data(:,1),data(:,3),'-.g', data(:,1),data(:,4),'--r', data(:,1),data(:,5),'-m', data(:,1),data(:,6),'-.k', data(:,1),data(:,7),'--b', 'LineWidth',3 );
legend( 'TA', 'TB', 'TC', 'TD', 'TE', 'TF' );
xlabel('t (sec)');   % ylabel('Some y-axis label');   title('Some plot title');
clear data;
end



%===========================================================================
function [functionsToEvaluateForEvent, eventTerminatesIntegration1Otherwise0ToContinue, eventDirection_AscendingIs1_CrossingIs0_DescendingIsNegative1] = EventDetection( t, VAR, uSimulink )
%===========================================================================
% Detects when designated functions are zero or cross zero with positive or negative slope.
% Step 1: Uncomment call to mdlDerivatives and mdlOutputs.
% Step 2: Change functionsToEvaluateForEvent,                      e.g., change  []  to  [t - 5.67]  to stop at t = 5.67.
% Step 3: Change eventTerminatesIntegration1Otherwise0ToContinue,  e.g., change  []  to  [1]  to stop integrating.
% Step 4: Change eventDirection_AscendingIs1_CrossingIs0_DescendingIsNegative1,  e.g., change  []  to  [1].
% Step 5: Possibly modify function EventDetectedByIntegrator (if eventTerminatesIntegration1Otherwise0ToContinue is 0).
%---------------------------------------------------------------------------
% mdlDerivatives( t, VAR, uSimulink );        % UNCOMMENT FOR EVENT HANDLING
% mdlOutputs(     t, VAR, uSimulink );        % UNCOMMENT FOR EVENT HANDLING
functionsToEvaluateForEvent = [];
eventTerminatesIntegration1Otherwise0ToContinue = [];
eventDirection_AscendingIs1_CrossingIs0_DescendingIsNegative1 = [];
eventDetectedByIntegratorTerminate1OrContinue0 = eventTerminatesIntegration1Otherwise0ToContinue;
end


%===========================================================================
function [isIntegrationFinished, VAR] = EventDetectedByIntegrator( t, VAR, nIndexOfEvents )
%===========================================================================
isIntegrationFinished = eventDetectedByIntegratorTerminate1OrContinue0( nIndexOfEvents );
if( ~isIntegrationFinished ),
   SetNamedQuantitiesFromMatrix( VAR );
%  Put code here to modify how integration continues.
   VAR = SetMatrixFromNamedQuantities;
end
end



%===========================================================================
function [t,VAR,Output] = IntegrateForwardOrBackward( tInitial, tFinal, tStep, absError, relError, VAR, printIntScreen, printIntFile )
%===========================================================================
OdeMatlabOptions = odeset( 'RelTol',relError, 'AbsTol',absError, 'MaxStep',tStep, 'Events',@EventDetection );
t = tInitial;                 epsilonT = 0.001*tStep;                   tFinalMinusEpsilonT = tFinal - epsilonT;
printCounterScreen = 0;       integrateForward = tFinal >= tInitial;    tAtEndOfIntegrationStep = t + tStep;
printCounterFile   = 0;       isIntegrationFinished = 0;
mdlDerivatives( t, VAR, 0 );
while 1,
   if( (integrateForward && t >= tFinalMinusEpsilonT) || (~integrateForward && t <= tFinalMinusEpsilonT) ), isIntegrationFinished = 1;  end
   shouldPrintToScreen = printIntScreen && ( isIntegrationFinished || printCounterScreen <= 0.01 );
   shouldPrintToFile   = printIntFile   && ( isIntegrationFinished || printCounterFile   <= 0.01 );
   if( isIntegrationFinished || shouldPrintToScreen || shouldPrintToFile ),
      Output = mdlOutputs( t, VAR, 0 );
      OutputToScreenOrFile( Output, shouldPrintToScreen, shouldPrintToFile );
      if( isIntegrationFinished ), break;  end
      if( shouldPrintToScreen ), printCounterScreen = printIntScreen;  end
      if( shouldPrintToFile ),   printCounterFile   = printIntFile;    end
   end
   [TimeOdeArray, VarOdeArray, timeEventOccurredInIntegrationStep, nStatesArraysAtEvent, nIndexOfEvents] = ode45( @mdlDerivatives, [t tAtEndOfIntegrationStep], VAR, OdeMatlabOptions, 0 );
   if( isempty(timeEventOccurredInIntegrationStep) ),
      lastIndex = length( TimeOdeArray );
      t = TimeOdeArray( lastIndex );
      VAR = VarOdeArray( lastIndex, : );
      printCounterScreen = printCounterScreen - 1;
      printCounterFile   = printCounterFile   - 1;
      if( abs(tAtEndOfIntegrationStep - t) >= abs(epsilonT) ), warning('numerical integration failed'); break;  end
      tAtEndOfIntegrationStep = t + tStep;
      if( (integrateForward && tAtEndOfIntegrationStep > tFinal) || (~integrateForward && tAtEndOfIntegrationStep < tFinal) ) tAtEndOfIntegrationStep = tFinal;  end
   else
      t = timeEventOccurredInIntegrationStep( 1 );    % time  at firstEvent = 1 during this integration step.
      VAR = nStatesArraysAtEvent( 1, : );             % state at firstEvent = 1 during this integration step.
      printCounterScreen = 0;
      printCounterFile   = 0;
      [isIntegrationFinished, VAR] = EventDetectedByIntegrator( t, VAR, nIndexOfEvents(1) );
   end
end
end


%==============================
end    % End of function MIPSI
%==============================
